// <auto-generated />
using System;
using ControlFichajesAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace ControlFichajesAPI.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ControlFichajesAPI.Models.Fichaje", b =>
                {
                    b.Property<int>("Id_Fichaje")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id_Fichaje"));

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("timestamp with time zone");

                    b.Property<TimeSpan?>("Hora_Entrada")
                        .HasColumnType("interval");

                    b.Property<TimeSpan?>("Hora_Salida")
                        .HasColumnType("interval");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("integer");

                    b.Property<int>("Tiempo_Pausa")
                        .HasColumnType("integer");

                    b.Property<string>("Tipo_Jornada")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id_Fichaje");

                    b.HasIndex("IdUsuario", "Fecha")
                        .HasDatabaseName("IX_Fichajes_IdUsuario_Fecha");

                    b.ToTable("Fichajes");
                });

            modelBuilder.Entity("ControlFichajesAPI.Models.Incidencia", b =>
                {
                    b.Property<int>("Id_Incidencia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id_Incidencia"));

                    b.Property<string>("Comentario")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("FechaReporte")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("IdFichaje")
                        .HasColumnType("integer");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("integer");

                    b.HasKey("Id_Incidencia");

                    b.HasIndex("IdFichaje");

                    b.HasIndex("IdUsuario", "FechaReporte")
                        .HasDatabaseName("IX_Incidencias_IdUsuario_FechaReporte");

                    b.ToTable("Incidencias");
                });

            modelBuilder.Entity("ControlFichajesAPI.Models.Usuario", b =>
                {
                    b.Property<int>("Id_Usuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id_Usuario"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Contraseña")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Rol")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id_Usuario");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("ControlFichajesAPI.Models.Fichaje", b =>
                {
                    b.HasOne("ControlFichajesAPI.Models.Usuario", "Usuario")
                        .WithMany("Fichajes")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Fichajes_Usuarios_IdUsuario");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("ControlFichajesAPI.Models.Incidencia", b =>
                {
                    b.HasOne("ControlFichajesAPI.Models.Fichaje", "Fichaje")
                        .WithMany()
                        .HasForeignKey("IdFichaje")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("FK_Incidencias_Fichajes_IdFichaje");

                    b.HasOne("ControlFichajesAPI.Models.Usuario", "Usuario")
                        .WithMany("Incidencias")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Incidencias_Usuarios_IdUsuario");

                    b.Navigation("Fichaje");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("ControlFichajesAPI.Models.Usuario", b =>
                {
                    b.Navigation("Fichajes");

                    b.Navigation("Incidencias");
                });
#pragma warning restore 612, 618
        }
    }
}
